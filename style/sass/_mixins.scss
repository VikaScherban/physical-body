 // responsive example, edit or remove
$min-sm-width: 768px;
$min-md-width: 992px;
$min-lg-width: 1200px;
@mixin media($media) {
  @if $media == md-lg {
    @media (min-width: $min-md-width) { @content; }
  }
  @elseif $media == md {
    @media (min-width: $min-md-width) and (max-width: $min-lg-width) { @content; }
  }
  @elseif $media == sm {
    @media (min-width: $min-sm-width) and (max-width: $min-md-width) { @content; }
  }
  @elseif $media == xs-sm {
    @media (max-width: $min-md-width - 1 ) { @content; }
  }
  @elseif $media == xs-md {
    @media (max-width: $min-lg-width - 1 ) { @content; }
  }
  @elseif $media == xs {
    @media (max-width: $min-sm-width - 1 ) { @content; }
  }
}
// retina bg
@mixin retina{
  @media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min-device-pixel-ratio: 2) {
    @content;
  }
}
//asdfast font-family
@mixin font($alias, $name){
  @font-face{
    font-family: $alias;
    src: url('fonts/'+$name+'.eot');
    src: url("fonts/"+$name+".eot?#iefix") format("embedded-opentype"), url("fonts/"+$name+".woff") format("woff"), url("fonts/"+$name+".ttf") format("truetype");
    font-weight: normal;
    font-style: normal;
  }
}

//+font(black, cytiapro-black-webfont)

// ROTATE
@mixin rotate($deg: 0, $m11: 0, $m12: 0, $m21: 0, $m22: 0) {
  -moz-transform: rotate($deg + deg);
  -o-transform: rotate($deg + deg);
  -webkit-transform: rotate($deg + deg);
  -ms-transform: rotate($deg + deg);
  transform: rotate($deg + deg);
  filter: progid:DXImageTransform.Microsoft.Matrix(M11=$m11, M12=$m12,M21=$m21, M22=$m22, sizingMethod='auto expand');
  zoom: 1;
}

// TRANSITION
@mixin transition($what) {
  -moz-transition:    $what;
  -o-transition:      $what;
  -webkit-transition: $what;
  -ms-transition:     $what;
  transition:         $what;
}
%hide-text{
  font: 0/0 a;
  text-shadow: none;
  color: transparent;
}
%clr{
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
  *zoom: 1;
}
@mixin placeholder-color($color) {
  &:-moz-placeholder {
    color: $color;
  }
  &::-webkit-input-placeholder {
    color: $color;
  }
}

%gray{
  filter: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'grayscale\'><feColorMatrix type=\'matrix\' values=\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\'/></filter></svg>#grayscale"); /* Firefox 10+ */
  filter: gray; /* IE6-9 */
  -webkit-filter: grayscale(100%); /* Chrome 19+ & Safari 6+ */
  filter: progid:DXImageTransform.Microsoft.BasicImage(grayScale=1);
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(grayScale=1)";
}
%gray-half{
  filter: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'grayscale\'><feColorMatrix type=\'saturate\' values=\'0.5\'/></filter></svg>#grayscale"); /* Firefox 10+ */
  filter: gray alpha(opacity=50); /* IE6-9 */
  -webkit-filter: grayscale(50%); /* Chrome 19+ & Safari 6+ */
}
%gray-zero{
  filter: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'grayscale\'><feColorMatrix type=\'matrix\' values=\'1 0 0 0 0, 0 1 0 0 0, 0 0 1 0 0, 0 0 0 1 0\'/></filter></svg>#grayscale");
  -webkit-filter: grayscale(0%);
}
@mixin unselectable() {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}
@mixin prevent-text(){
  -ms-word-break: break-all;
  word-break: break-all;
  word-break: break-word;
  -webkit-hyphens: auto;
  -moz-hyphens: auto;
  hyphens: auto;
}
@mixin font-smoothing($val: antialiased) {
   -webkit-font-smoothing: $val;
   -moz-font-smoothing: $val;
   -ms-font-smoothing: $val;
   -o-font-smoothing: $val;
}
@mixin selection {
  & ::selection {
    @content;
  }
  & ::-moz-selection {
    @content;
  }
}
@mixin inline-block($valign: top){
  display: inline-block;
  float: none;
  zoom:1;
  *display: inline;
  vertical-align: $valign;
}
@mixin cellInit{
  display: inline;
  float: left;
}
@mixin inlineBlockModelParent{
  font-size: 0px;
  letter-spacing: 0px;
  line-height: 0;
}
@mixin inlineBlockModelChild($fs:$defaultFontSize, $lh: $defaultLineHeight){
  font-size: $fs;
  line-height: $lh;
  letter-spacing:normal;
}

@mixin linear-gradient($color1,$color2){
  background: $color1; /* Old browsers */
  background: -moz-linear-gradient(top, $color1, $color2); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, $color1), color-stop(100%, $color2)); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, $color1, $color2); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, $color1, $color2); /* Opera 11.10+ */
  background: -ms-linear-gradient(top, $color1, $color2); /* IE10+ */
  background: linear-gradient(to bottom, $color1, $color2); /* W3C */
}


@mixin vgradient($top, $bottom){
  @include background-image(linear-gradient($top, $bottom));
}
@mixin hgradient($left, $right){
  @include background-image(linear-gradient(left, $left, $right));
}

// Gradient Bar Colors for buttons and alerts
@mixin gradientBar($primaryColor, $secondaryColor, $textColor: #fff, $textShadow: 0 -1px 0 rgba(0,0,0,.25)) {
  color: $textColor;
  text-shadow: $textShadow;
  background-color: mix($primaryColor, $secondaryColor, 60%);
  @include vgradient($primaryColor, $secondaryColor);
  background-repeat: repeat-x;
  border-color: $secondaryColor $secondaryColor darken($secondaryColor, 15%);
  //border-color: rgba(0,0,0,.1) rgba(0,0,0,.1) fadein(rgba(0,0,0,.1), 15%);
}


@mixin buttonBackground($startColor, $endColor, $textColor: #fff, $textShadow: 0 -1px 0 rgba(0,0,0,.25)) {
  // gradientBar will set the background to a pleasing blend of these, to support IE<=9
  @include gradientBar($startColor, $endColor, $textColor, $textShadow);
  *background-color: $endColor; /* Darken IE7 buttons by default so they stand out more given they won't have borders */

  // in these cases the gradient won't cover the background, so we override
  &:hover, &:focus, &:active, &.active, &.disabled, &[disabled] {
    color: $textColor;
    background-color: $endColor;
    *background-color: darken($endColor, 5%);
  }
}

@mixin buttonFlatBackground($backColor, $textColor: #fff, $hoverBackColor: lighten($backColor, 10%), $activeBackColor: darken($backColor, 5%)){
  background: $backColor;
  color: $textColor;
  &:active, &.active, &.disabled, &[disabled] {
    background: $activeBackColor;
    color: $textColor;
  }
  &:hover{
    background: $hoverBackColor;
    color: $textColor;
  }
}

@mixin triangle($size, $color, $direction){
  border-width: $size;
  border-style: solid;
  @if ($direction == 'top'){
    border-color: transparent transparent $color transparent;
  }
  @if ($direction == 'bottom'){
    border-color: $color transparent transparent transparent;
  }
  @if ($direction == 'left'){
    border-color: transparent transparent transparent $color;
  }
  @if ($direction == 'right'){
    border-color: transparent $color transparent transparent;
  }
}

@mixin flat-box{
  box-shadow: 0px 1px 2px rgba(5, 5, 6, .1);
}

@mixin clear{
  &:before, &:after{
    content: '';
    display: table;
    clear: both;
  }
}

@mixin box-sizing($box-sizing) {
  -webkit-box-sizing: $box-sizing;
  -moz-box-sizing: $box-sizing;
  box-sizing: $box-sizing;
}


@mixin user-select($user-select){
  -webkit-user-select: $user-select;
  -moz-user-select: $user-select;
  user-select: $user-select;
}